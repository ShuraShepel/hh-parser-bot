from parser import parse_hh_vacancy
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, ContextTypes, filters
import openai
import re

# üîê –¢–≤–æ–∏ –∫–ª—é—á–∏
import os
TELEGRAM_TOKEN = os.environ["TELEGRAM_TOKEN"]
openai.api_key = os.environ["OPENAI_API_KEY"]

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    chat_id = update.effective_chat.id

    if text.startswith("https://hh.ru/vacancy/"):
        await context.bot.send_message(chat_id=chat_id, text="–°—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞. –ü–∞—Ä—Å—é –æ–ø–∏—Å–∞–Ω–∏–µ‚Ä¶")

        try:
            description, title = parse_hh_vacancy(text)
            if not description:
                await context.bot.send_message(chat_id=chat_id, text="–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ üòû")
                return

            await context.bot.send_message(chat_id=chat_id, text="–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ. –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ‚Ä¶")

            prompt = (
                "–ù–∞ –æ—Å–Ω–æ–≤–µ –æ–ø–∏—Å–∞–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏ –Ω–∏–∂–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å—Ç–∏–ª–µ:\n"
                "- –∫–æ—Ä–æ—Ç–∫–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ;\n"
                "- –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ: –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä, –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∞ –≤–∞–∫–∞–Ω—Å–∏—è;\n"
                "- —Å–ø–∏—Å–æ–∫ –∏–∑ 7‚Äì10 –∫–ª—é—á–µ–≤—ã—Ö —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –∏ –æ–ø—ã—Ç–∞ (–≤ –≤–∏–¥–µ –º–∞—Ä–∫–µ—Ä–æ–≤);\n"
                "- –∑–∞–≤–µ—Ä—à–∞—é—â–∏–π –∞–±–∑–∞—Ü —Å —Ñ—Ä–∞–∑–æ–π –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –æ–±—Å—É–¥–∏—Ç—å –æ–ø—ã—Ç –Ω–∞ –∏–Ω—Ç–µ—Ä–≤—å—é;\n"
                "- –ø–æ–¥–ø–∏—Å—å: –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ê–ª–µ–∫—Å–∞–Ω–¥—Ä.\n\n"
                "–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏:\n"
                f"{description}"
            )

            response = openai.ChatCompletion.create(
                model="gpt-4o",
                messages=[{"role": "user", "content": prompt}],
                max_tokens=700,
                temperature=0.7
            )

            letter = response.choices[0].message.content.strip()

            # === –ö–æ—Ä—Ä–µ–∫—Ü–∏—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ ===

            # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ ‚Äî —Å—Ç—Ä–æ–≥–æ "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!"
            letter = re.sub(r"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ[!.,]*", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!", letter)

            # –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ + –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–∞ –ø–µ—Ä–µ–¥ –Ω–∞–≤—ã–∫–∞–º–∏
            letter = re.sub(
                r"–ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä[^.\n]*[.\n]",
                f'–ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä. –ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∞ –≤–∞–∫–∞–Ω—Å–∏—è "{title}".\n–ú–æ–∏ –∫–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ –∏ –∑–Ω–∞–Ω–∏—è, —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –≤–∞—à–µ–π –≤–∞–∫–∞–Ω—Å–∏–∏:',
                letter,
                flags=re.IGNORECASE
            )

            # –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–µ–π —Ñ—Ä–∞–∑—ã "–ú–æ–∏ –∫–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ –∏ –æ–ø—ã—Ç –≤–∫–ª—é—á–∞—é—Ç:"
            letter = re.sub(
                r"\n?–ú–æ–∏ –∫–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ –∏ –æ–ø—ã—Ç –≤–∫–ª—é—á–∞—é—Ç:\n?",
                "",
                letter,
                flags=re.IGNORECASE
            )

            # –£–¥–∞–ª–µ–Ω–∏–µ –ª—é–±—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∏–π –æ—Ç GPT –∏ –∑–∞–º–µ–Ω–∞ –Ω–∞ —Ç–≤–æ–π —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –±–ª–æ–∫
            end_variants = [
                r"–° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –æ–±—Å—É–¥–∏–ª –±—ã[^.\n]*\n*",
                r"–Ø –≥–æ—Ç–æ–≤ –æ–±—Å—É–¥–∏—Ç—å[^.\n]*\n*",
                r"–ë—É–¥—É —Ä–∞–¥ –æ–±—Å—É–¥–∏—Ç—å[^.\n]*\n*",
                r"–ë—É–¥—É —Ä–∞–¥ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—Å—É–¥–∏—Ç—å[^.\n]*\n*"
            ]
            for pattern in end_variants:
                letter = re.sub(pattern, "", letter, flags=re.IGNORECASE)

            # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –ø–æ–¥–ø–∏—Å–∏ (–µ—Å–ª–∏ –≤–¥—Ä—É–≥ –æ—Å—Ç–∞–ª–∞—Å—å)
            letter = re.sub(r"\n–° —É–≤–∞–∂–µ–Ω–∏–µ–º[.,\s]*–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –®–µ–ø–µ–ª–µ–≤[.]*", "", letter, flags=re.IGNORECASE)
            letter = re.sub(r"\n–° —É–≤–∞–∂–µ–Ω–∏–µ–º[.,\s]*–ê–ª–µ–∫—Å–∞–Ω–¥—Ä[.]*", "", letter, flags=re.IGNORECASE)

            # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –±–ª–æ–∫ + –ø–æ–¥–ø–∏—Å—å
            letter = letter.strip() + "\n\n–ù–∞ –∏–Ω—Ç–µ—Ä–≤—å—é —Å —Ä–∞–¥–æ—Å—Ç—å—é —Ä–∞—Å—Å–∫–∞–∂—É –æ —Å–≤–æ–µ–º –æ–ø—ã—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ.\n–°–ø–∞—Å–∏–±–æ –∑–∞ —É–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è.\n–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ê–ª–µ–∫—Å–∞–Ω–¥—Ä"

            # Telegram –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
            if len(letter) > 4000:
                letter = letter[:3990] + "\n\n(–æ–±—Ä–µ–∑–∞–Ω–æ)"

            await context.bot.send_message(chat_id=chat_id, text=letter)

        except Exception as e:
            await context.bot.send_message(chat_id=chat_id, text=f"–û—à–∏–±–∫–∞: {e}")

    else:
        await context.bot.send_message(chat_id=chat_id, text="–ü—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é —Å hh.ru")


if __name__ == '__main__':
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω üöÄ")

    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))
    app.run_polling()